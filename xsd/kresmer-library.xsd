<?xml version="1.0" encoding="UTF-8"?>
<xs:schema version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:v-bind="v-bind" xmlns:Kre="Kre">
    <xs:import namespace="v-bind" schemaLocation="v-bind.xsd"/>
    <xs:import namespace="Kre" schemaLocation="Kre.xsd"/>

    <xs:attributeGroup name="origin-attrs">
        <xs:attribute name="x" type="xs:decimal"/>
        <xs:attribute ref="v-bind:x"/>
        <xs:attribute name="y" type="xs:decimal"/>
        <xs:attribute ref="v-bind:y"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="presentation-attrs">
        <xs:attribute name="stroke" type="xs:string" />
        <xs:attribute ref="v-bind:stroke"/>
        <xs:attribute ref="v-bind:stroke-width" />
        <xs:attribute name="stroke-width" />
        <xs:attribute name="stroke-opacity" type="xs:decimal" />
        <xs:attribute ref="v-bind:stroke-opacity" />
        <xs:attribute name="fill" type="xs:string"/>
        <xs:attribute ref="v-bind:fill" />
        <xs:attribute name="filter" type="xs:string"/>
        <xs:attribute ref="v-bind:filter" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dim-attrs">
        <xs:attribute name="width"  />
        <xs:attribute ref="v-bind:width"  />
        <xs:attribute name="height" />
        <xs:attribute ref="v-bind:height" />
    </xs:attributeGroup>

    <xs:attributeGroup name="point-attrs">
        <xs:attribute name="points"></xs:attribute>
        <xs:attribute ref="v-bind:points" />
    </xs:attributeGroup>

    <xs:attributeGroup name="font-attrs">
        <xs:attribute name="font-size" />
        <xs:attribute ref="v-bind:font-size" />
        <xs:attribute name="font-family" />
        <xs:attribute ref="v-bind:font-family" />
    </xs:attributeGroup>

    <xs:attributeGroup name="vue-directives">
        <xs:attribute name="v-for"/>
        <xs:attribute name="v-if"/>
        <xs:attribute name="v-else"/>
    </xs:attributeGroup>
    
    <xs:element name="kresmer-library">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="defs" minOccurs="0">
                    <xs:complexType><xs:choice><xs:any processContents="lax"></xs:any></xs:choice></xs:complexType>
                </xs:element>

                <xs:element name="component-class" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="template">
                                <xs:complexType>
                                    <xs:sequence minOccurs="0">
                                        <xs:choice maxOccurs="unbounded">

                                            <xs:element name="rect" minOccurs="0">
                                                <xs:complexType>
                                                    <xs:attributeGroup ref="origin-attrs"/>
                                                    <xs:attributeGroup ref="dim-attrs"/>
                                                    <xs:attributeGroup ref="presentation-attrs"/>
                                                    <xs:attributeGroup ref="vue-directives"/>
                                                    <xs:attribute name="vector-effect"/>
                                                </xs:complexType>
                                            </xs:element>

                                            <xs:element name="polyline" minOccurs="0">
                                                <xs:complexType>
                                                    <xs:attributeGroup ref="point-attrs"/>
                                                    <xs:attributeGroup ref="presentation-attrs"/>
                                                    <xs:attributeGroup ref="vue-directives"/>
                                                    <xs:attribute name="vector-effect"/>
                                                </xs:complexType>
                                            </xs:element>

                                            <xs:element name="text" minOccurs="0">
                                                <xs:complexType mixed="true">
                                                    <xs:sequence>
                                                        <xs:element name="slot" minOccurs="0"/>
                                                    </xs:sequence>
                                                    <xs:attributeGroup ref="origin-attrs"/>
                                                    <xs:attributeGroup ref="presentation-attrs"/>
                                                    <xs:attributeGroup ref="font-attrs"/>
                                                    <xs:attributeGroup ref="vue-directives"/>
                                                </xs:complexType>
                                            </xs:element>

                                            <xs:any namespace="Kre" processContents="skip"/>
                                        </xs:choice>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
    
                            <xs:element name="props" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="prop" maxOccurs="unbounded">
                                            <xs:complexType>
                                                <xs:attribute name="name" use="required" />
                                                <xs:attribute name="type" use="required" />
                                                <xs:attribute name="required" type="xs:boolean" />
                                                <xs:attribute name="default" />
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>

                            <xs:element name="defs" minOccurs="0">
                                <xs:complexType><xs:choice><xs:any processContents="lax"></xs:any></xs:choice></xs:complexType>
                            </xs:element>
                        </xs:all>
                        <xs:attribute name="name" use="required" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>