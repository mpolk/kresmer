<?xml version="1.0" encoding="UTF-8"?>
<!-- **************************************************************************>
 *                            ðŸ‘‘ KresMer ðŸ‘‘
 *       "Kreslennya Merezh" - network diagram editor and viewer
 *      Copyright (C) 2022-2024 Dmitriy Stepanenko. All Rights Reserved.
 * ___________________________________________________________________________
 *              Schema  for the Kresmer drawings validation
 *************************************************************************** -->
 <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="kresmer-drawing" xmlns="kresmer-drawing"
    elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:import namespace="kresmer-library" schemaLocation="kresmer-library.xsd"/>

    <xs:element name="kresmer-drawing">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="library" xmlns="kresmer-library" type="library" minOccurs="0"/>
                <xs:choice maxOccurs="unbounded">

                    <xs:element name="component">
                        <xs:complexType>
                            <xs:all>

                                <xs:element name="props" type="drawing-element-props" minOccurs="0"/>                        

                                <xs:element name="origin">
                                    <xs:complexType>
                                        <xs:attribute name="x" type="xs:float" use="required" />
                                        <xs:attribute name="y" type="xs:float" use="required" />
                                    </xs:complexType>
                                </xs:element>

                                <xs:element name="content" minOccurs="0" type="xs:string" />

                                <xs:element name="transform" minOccurs="0">
                                    <xs:complexType>
                                        <xs:all>
                                            <xs:element name="rotate" minOccurs="0">
                                                <xs:complexType>
                                                    <xs:attribute name="angle" type="xs:float" use="required"/>
                                                    <xs:attribute name="x" type="xs:float"/>
                                                    <xs:attribute name="y" type="xs:float"/>
                                                </xs:complexType>
                                            </xs:element>
                                            <xs:element name="scale" minOccurs="0">
                                                <xs:complexType>
                                                    <xs:attribute name="x" type="xs:float"/>
                                                    <xs:attribute name="y" type="xs:float"/>
                                                </xs:complexType>
                                            </xs:element>
                                        </xs:all>
                                    </xs:complexType>
                                </xs:element>
                            </xs:all>
                            
                            <xs:attribute name="class" use="required" />
                            <xs:anyAttribute processContents="lax"/>
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="link" type="link"/>
                    <xs:element name="link-bundle" type="link-base"/>

                    <xs:element name="area">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="props" type="drawing-element-props" minOccurs="0" maxOccurs="1"/>
                                <xs:element name="vertices">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="vertex" type="area-vertex" minOccurs="0" maxOccurs="unbounded"/>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element name="borders" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="border">
                                                <xs:complexType>
                                                    <xs:attribute name="class" use="required"/>
                                                    <xs:attribute name="from" use="required" type="xs:int"/>
                                                    <xs:attribute name="to" use="required" type="xs:int"/>
                                                </xs:complexType>
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
        
                            <xs:anyAttribute processContents="lax"/>
                        </xs:complexType>
                    </xs:element>

                </xs:choice>
            </xs:sequence>

            <xs:attribute name="name" use="required" />
            <xs:attribute name="width" type="xs:float" />
            <xs:attribute name="height" type="xs:float" />
            <xs:attribute name="href-base"/>
            <xs:attribute name="background-image"/>
            <xs:attribute name="background-image-alignment"/>
            <xs:attribute name="background-image-visibility"/>
            <xs:attribute name="background-color"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="link-base">
        <xs:sequence>
            <xs:element name="props" type="drawing-element-props" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="vertices">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="vertex" type="link-vertex" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="vertex" type="link-vertex" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        
        <xs:anyAttribute processContents="lax"/>
    </xs:complexType>

    <xs:complexType name="link">
        <xs:complexContent>
            <xs:extension base="link-base">
                <xs:attribute name="class" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="link-vertex">
        <xs:attribute name="x" type="xs:float"/>
        <xs:attribute name="y" type="xs:float"/>
        <xs:attribute name="connect" type="xs:string"/>
        <xs:attribute name="bundle" type="xs:string"/>
        <xs:attribute name="after" type="xs:string"/>
        <xs:attribute name="distance" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="area-vertex">
        <xs:attribute name="x" type="xs:float"/>
        <xs:attribute name="y" type="xs:float"/>
        <xs:attribute name="geometry">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[L|C|S|Q|T]( \d+(\.\d+)?,\d+(\.\d+)?)*"></xs:pattern>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="drawing-element-props">
        <xs:sequence>
            <xs:element name="prop" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="name" use="required" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

</xs:schema>