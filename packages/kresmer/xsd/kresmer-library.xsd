<?xml version="1.0" encoding="UTF-8"?>
<!-- **************************************************************************>
 *                            ðŸ‘‘ KresMer ðŸ‘‘
 *       "Kreslennya Merezh" - network diagram editor and viewer
 *      Copyright (C) 2022-2023 Dmitriy Stepanenko. All Rights Reserved.
 * ___________________________________________________________________________
 *            Schema  for the Kresmer libraries validation
 *************************************************************************** -->
<xs:schema version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns:v-bind="v-bind" xmlns:v-slot="v-slot" xmlns:Kre="Kre">
    <xs:import namespace="v-bind" schemaLocation="v-bind.xsd"/>
    <xs:import namespace="v-slot" schemaLocation="v-slot.xsd"/>
    <xs:import namespace="Kre" schemaLocation="Kre.xsd"/>

    <!-- Library itself (the root element) -->
    <xs:element name="kresmer-library">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="defs" minOccurs="0"/>

                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="component-class">
                        <xs:complexType>
                            <xs:all>
                                <xs:element ref="extends" minOccurs="0" />
                                <xs:element name="template" minOccurs="0" type="outermost-template"/>
                                <xs:element ref="props" minOccurs="0"/>
                                <xs:element ref="computed-props" minOccurs="0"/>
                                <xs:element ref="defs" minOccurs="0"/>
                                <xs:element ref="style" minOccurs="0"/>
                            </xs:all>

                            <xs:attribute name="name" use="required" />
                            <xs:attribute name="category" />
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="link-class" type="link-class"/>
                    <xs:element name="link-bundle-class" type="link-class"/>

                    <xs:element name="import">
                        <xs:complexType>
                            <xs:attribute name="library" use="required"/>
                            <xs:attribute name="file-name"/>
                        </xs:complexType>
                    </xs:element>
                    
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="name" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="link-class">
        <xs:all>
            <xs:element ref="extends" minOccurs="0" />
            <xs:element ref="props" minOccurs="0"/>
            <xs:element ref="computed-props" minOccurs="0"/>
            <xs:element ref="defs" minOccurs="0"/>
            <xs:element ref="style" minOccurs="0"/>
        </xs:all>

        <xs:attribute name="name" use="required" />
        <xs:attribute name="category" />
    </xs:complexType>

    <!-- SVG content (used mostly in templates) -->
    <xs:group name="svg-elements">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">

                <xs:element name="rect" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="rect-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="circle" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="circle-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="ellipse" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="ellipse-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="line" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="line-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="polyline" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="point-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="path" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="d"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="polygon" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="point-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="text" minOccurs="0">
                    <xs:complexType mixed="true">
                        <xs:choice maxOccurs="unbounded">
                            <xs:element ref="slot" minOccurs="0"/>
                            <xs:element name="title" minOccurs="0"/>
                            <xs:element name="tspan" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:choice>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="text-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="title" minOccurs="0">
                    <xs:complexType mixed="true">
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="text-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="a">
                    <xs:complexType mixed="true">
                        <xs:group ref="svg-elements" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="text-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attributeGroup ref="href-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="image">
                    <xs:complexType>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="image-attrs"/>
                        <xs:attribute name="href"/>
                        <xs:attribute ref="v-bind:href"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="use" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                        <xs:attribute name="href"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="connection-point" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attribute name="d" type="xs:decimal" />
                        <xs:attribute ref="v-bind:d" />
                        <xs:attribute name="dir">
                            <xs:simpleType>
                                <xs:union memberTypes="xs:decimal directions"/>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute ref="v-bind:dir" />
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="g">
                    <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:group ref="svg-elements"/>
                            <xs:element ref="slot"/>
                        </xs:choice>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="svg">
                    <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:group ref="svg-elements"/>
                            <xs:element ref="slot"/>
                            <xs:element ref="template"/>
                        </xs:choice>
                        <xs:attributeGroup ref="origin-attrs"></xs:attributeGroup>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="defs">
                    <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:group ref="svg-elements"/>
                            <xs:element ref="slot"/>
                        </xs:choice>
                        <xs:attributeGroup ref="vue-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="filter">
                    <xs:complexType>
                        <xs:choice>
                            <xs:any processContents="lax"/>
                        </xs:choice>
                        <xs:attributeGroup ref="general-attrs"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="pattern">
                    <xs:complexType>
                        <xs:group ref="svg-elements"/>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="image-attrs"/>
                        <xs:attribute ref="viewBox"/>
                        <xs:attribute name="patternUnits" type="coordSystem"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="marker">
                    <xs:complexType>
                        <xs:group ref="svg-elements"/>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="image-attrs"/>
                        <xs:attribute name="markerUnits" type="coordSystem"/>
                        <xs:attribute name="markerWidth" type="xs:decimal"/>
                        <xs:attribute name="markerHeight" type="xs:decimal"/>
                        <xs:attribute ref="viewBox"/>
                        <xs:attribute name="orient"/>
                        <xs:attribute name="refX" type="xs:decimal"/>
                        <xs:attribute name="refY" type="xs:decimal"/>
                    </xs:complexType>
                </xs:element>

                <!-- Embedded components -->
                <xs:any namespace="Kre" processContents="lax"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <!-- Template content (used in components) -->
    <xs:complexType name="outermost-template" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="svg-elements"/>
            <xs:element ref="slot"/>
            <xs:element name="template" type="inner-template"/>
            <xs:element name="component">
                <xs:complexType>
                    <xs:attribute ref="v-bind:is" use="required"/>
                    <xs:anyAttribute processContents="lax"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="inner-template">
        <xs:complexContent>
            <xs:extension base="outermost-template">
                <xs:attributeGroup ref="vue-attrs"/>
                <xs:anyAttribute namespace="v-slot" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="template" type="inner-template"/>

    <!-- Vue slots -->
    <xs:element name="slot">
        <xs:complexType mixed="true">
            <xs:attribute name="name" type="xs:string"/>
        </xs:complexType>
    </xs:element>
    
    <!-- Network element base class clause -->
    <xs:element name="extends">
        <xs:complexType>
            <xs:complexContent mixed="true">
                <xs:extension base="inner-template">
                    <xs:attribute name="base" use="required"/>
                    <xs:anyAttribute processContents="lax"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Component props (translated to Vue props) -->
    <xs:element name="props">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="prop" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="name" use="required" />

                        <xs:attribute name="type" use="required">
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="String"/>
                                    <xs:enumeration value="string"/>
                                    <xs:enumeration value="Number"/>
                                    <xs:enumeration value="number"/>
                                    <xs:enumeration value="Boolean"/>
                                    <xs:enumeration value="boolean"/>
                                    <xs:enumeration value="Object"/>
                                    <xs:enumeration value="object"/>
                                    <xs:enumeration value="Color"/>
                                    <xs:enumeration value="color"/>
                                    <xs:enumeration value="ImageURL"/>
                                    <xs:enumeration value="image-url"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>

                        <xs:attribute name="required" type="xs:boolean" />
                        <xs:attribute name="default" />
                        <xs:attribute name="choices" />
                        <xs:attribute name="pattern" />
                        <xs:attribute name="description"/>

                        <xs:attribute name="category">
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="Hidden"/>
                                    <xs:enumeration value="Geometry"/>
                                    <xs:enumeration value="Presentation"/>
                                    <xs:enumeration value="Construction"/>
                                    <xs:enumeration value="Network"/>
                                    <xs:enumeration value="Hardware"/>
                                    <xs:enumeration value="Optics"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="extend"/>
            <xs:attribute name="except"/>
        </xs:complexType>
    </xs:element>

    <!-- Computed component props (translated to Vue component props) -->
    <xs:element name="computed-props">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="computed-prop" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute name="name" use="required" />
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="extend"/>
            <xs:attribute name="except"/>
        </xs:complexType>
    </xs:element>

    <!-- Local and global definitions (translated to SVG defs) -->
    <xs:element name="defs">
        <xs:complexType mixed="true">
            <xs:group ref="svg-elements"></xs:group>
        </xs:complexType>
    </xs:element>

    <!-- Local and global styles (translated to CSS) -->
    <xs:element name="style">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="extends"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <!-- Various attributes -->
    <xs:attributeGroup name="general-attrs">
        <xs:attribute name="name" type="xs:string" />
        <xs:attribute ref="v-bind:name"/>
        <xs:attribute name="id" type="xs:string" />
        <xs:attribute ref="v-bind:id"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="origin-attrs">
        <xs:attribute name="x" type="xs:decimal"/>
        <xs:attribute ref="v-bind:x"/>
        <xs:attribute name="y" type="xs:decimal"/>
        <xs:attribute ref="v-bind:y"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="line-attrs">
        <xs:attribute name="x1"/>
        <xs:attribute ref="v-bind:x1"/>
        <xs:attribute name="y1"/>
        <xs:attribute ref="v-bind:y1"/>
        <xs:attribute name="x2"/>
        <xs:attribute ref="v-bind:x2"/>
        <xs:attribute name="y2"/>
        <xs:attribute ref="v-bind:y2"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="circle-attrs">
        <xs:attribute name="cx" type="xs:decimal"/>
        <xs:attribute ref="v-bind:cx"/>
        <xs:attribute name="cy" type="xs:decimal"/>
        <xs:attribute ref="v-bind:cy"/>
        <xs:attribute name="r" type="xs:decimal"/>
        <xs:attribute ref="v-bind:r"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="rect-attrs">
        <xs:attribute name="rx" type="xs:decimal"/>
        <xs:attribute ref="v-bind:rx"/>
        <xs:attribute name="ry" type="xs:decimal"/>
        <xs:attribute ref="v-bind:ry"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="ellipse-attrs">
        <xs:attributeGroup ref="circle-attrs"/>
        <xs:attributeGroup ref="rect-attrs"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="presentation-attrs">
        <xs:attribute name="stroke" type="xs:string" />
        <xs:attribute ref="v-bind:stroke"/>
        <xs:attribute ref="v-bind:stroke-width" />
        <xs:attribute name="stroke-width" />
        <xs:attribute name="stroke-opacity" type="xs:decimal" />
        <xs:attribute ref="v-bind:stroke-opacity" />
        <xs:attribute name="fill" type="xs:string"/>
        <xs:attribute ref="v-bind:fill" />
        <xs:attribute name="filter" type="xs:string"/>
        <xs:attribute ref="v-bind:filter" />
        <xs:attribute name="class" type="xs:string"/>
        <xs:attribute ref="v-bind:class" />
        <xs:attribute name="style" type="xs:string"/>
        <xs:attribute ref="v-bind:style" />
    </xs:attributeGroup>

    <xs:attributeGroup name="transform-attrs">
        <xs:attribute name="transform" />
        <xs:attribute ref="v-bind:transform"/>
        <xs:attribute name="transform-origin" />
        <xs:attribute ref="v-bind:transform-origin"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="dim-attrs">
        <xs:attribute name="width"  />
        <xs:attribute ref="v-bind:width"  />
        <xs:attribute name="height" />
        <xs:attribute ref="v-bind:height" />
    </xs:attributeGroup>

    <xs:attributeGroup name="point-attrs">
        <xs:attribute name="points"></xs:attribute>
        <xs:attribute ref="v-bind:points" />
    </xs:attributeGroup>

    <xs:attributeGroup name="text-attrs">
        <xs:attribute name="font-size" />
        <xs:attribute ref="v-bind:font-size" />
        <xs:attribute name="font-family" />
        <xs:attribute ref="v-bind:font-family" />
        <xs:attribute name="text-anchor" />
        <xs:attribute ref="v-bind:text-anchor" />
        <xs:attribute name="dominant-baseline">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="auto"></xs:enumeration>
                    <xs:enumeration value="hanging"></xs:enumeration>
                    <xs:enumeration value="middle"></xs:enumeration>
                    <xs:enumeration value="central"></xs:enumeration>
                    <xs:enumeration value="ideographic"></xs:enumeration>
                    <xs:enumeration value="alhabetic"></xs:enumeration>
                    <xs:enumeration value="mathematical"></xs:enumeration>
                    <xs:enumeration value="text-top"></xs:enumeration>
                    <xs:enumeration value="text-bottom"></xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute ref="v-bind:dominant-baseline"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="image-attrs">
        <xs:attribute name="preserveAspectRatio" type="preserveAspectRatioOptions"/>
        <xs:attribute ref="v-bind:preserveAspectRatio"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="vue-directives">
        <xs:attribute name="v-bind"/>
        <xs:attribute name="v-for"/>
        <xs:attribute name="v-if"/>
        <xs:attribute name="v-else"/>
        <xs:attribute name="v-else-if"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="vue-attrs">
        <xs:attribute ref="v-bind:key"/>
        <xs:attributeGroup ref="vue-directives"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="href-attrs">
        <xs:attribute name="href" type="xs:anyURI"/>
        <xs:attribute ref="v-bind:href"/>
        <xs:attribute name="target"/>
        <xs:attribute ref="v-bind:target"/>
        <xs:anyAttribute namespace="v-on" processContents="lax"/>
    </xs:attributeGroup>

    <xs:attribute name="viewBox" type="four-numbers"/>
    <xs:simpleType name="four-numbers">
        <xs:restriction base="list-of-numbers">
            <xs:minLength value="4"/>
            <xs:maxLength value="4"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="list-of-numbers">
        <xs:list itemType="xs:decimal"></xs:list>
    </xs:simpleType>

    <xs:simpleType name="coordSystem">
        <xs:restriction base="xs:string">
            <xs:enumeration value="userSpaceOnUse"/>
            <xs:enumeration value="objectBoundingBox"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="preserveAspectRatioOptions">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="xMinYMin"/>
            <xs:enumeration value="xMidYMin"/>
            <xs:enumeration value="xMaxYMin"/>
            <xs:enumeration value="xMinYMid"/>
            <xs:enumeration value="xMidYMid"/>
            <xs:enumeration value="xMaxYMid"/>
            <xs:enumeration value="xMinYMax"/>
            <xs:enumeration value="xMidYMax"/>
            <xs:enumeration value="xMaxYMax"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="directions">
        <xs:restriction base="xs:string">
            <xs:enumeration value="up"/>
            <xs:enumeration value="top"/>
            <xs:enumeration value="down"/>
            <xs:enumeration value="bottom"/>
            <xs:enumeration value="left"/>
            <xs:enumeration value="right"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>