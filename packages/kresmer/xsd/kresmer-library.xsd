<?xml version="1.0" encoding="UTF-8"?>
<xs:schema version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:v-bind="v-bind" xmlns:Kre="Kre">
    <xs:import namespace="v-bind" schemaLocation="v-bind.xsd"/>
    <xs:import namespace="Kre" schemaLocation="Kre.xsd"/>

    <!-- Library itself (the root element) -->
    <xs:element name="kresmer-library">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="defs" minOccurs="0"/>

                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="component-class">
                        <xs:complexType>
                            <xs:all>
                                <xs:element ref="template"/>
                                <xs:element ref="props" minOccurs="0"/>
                                <xs:element ref="computed-props" minOccurs="0"/>
                                <xs:element ref="defs" minOccurs="0"/>
                                <xs:element ref="style" minOccurs="0"/>
                            </xs:all>

                            <xs:attribute name="name" use="required" />
                            <xs:attribute name="instantiate">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="auto"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="link-class">
                        <xs:complexType>
                            <xs:all>
                                <xs:element ref="props" minOccurs="0"/>
                                <xs:element ref="computed-props" minOccurs="0"/>
                                <xs:element ref="defs" minOccurs="0"/>
                                <xs:element ref="style" minOccurs="0"/>
                            </xs:all>

                            <xs:attribute name="name" use="required" />
                            <xs:attribute name="type" type="linkType"/>
                        </xs:complexType>
                    </xs:element>
                    
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- SVG content (used mostly in templates) -->
    <xs:group name="svg-elements">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">

                <xs:element name="rect" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="circle" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="circle-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="line" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="line-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="polyline" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="point-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="polygon" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="point-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="text" minOccurs="0">
                    <xs:complexType mixed="true">
                        <xs:all>
                            <xs:element name="slot" minOccurs="0"/>
                            <xs:element name="title" minOccurs="0"/>
                        </xs:all>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="text-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="use" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attributeGroup ref="dim-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                        <xs:attribute name="href"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="connection-point" minOccurs="0">
                    <xs:complexType>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="origin-attrs"/>
                        <xs:attribute name="d" type="xs:decimal" />
                        <xs:attribute ref="v-bind:d" />
                        <xs:attribute name="dir" type="xs:decimal" />
                        <xs:attribute ref="v-bind:dir" />
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                        <xs:attribute name="vector-effect"/>
                        <xs:attribute name="type" type="linkType"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="g">
                    <xs:complexType>
                        <xs:group ref="svg-elements"></xs:group>
                        <xs:attributeGroup ref="general-attrs"/>
                        <xs:attributeGroup ref="presentation-attrs"/>
                        <xs:attributeGroup ref="transform-attrs"/>
                        <xs:attributeGroup ref="vue-directives"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="filter">
                    <xs:complexType>
                        <xs:choice>
                            <xs:any processContents="lax"/>
                        </xs:choice>
                        <xs:attributeGroup ref="general-attrs"/>
                    </xs:complexType>
                </xs:element>

                <!-- Embedded components -->
                <xs:any namespace="Kre" processContents="lax"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <!-- Template content (used in components) -->
    <xs:complexType name="template" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="svg-elements"/>
            <xs:element name="template" type="internal-template"/>
            <xs:element name="slot" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="internal-template">
        <xs:complexContent>
            <xs:extension base="template">
                <xs:attributeGroup ref="vue-directives"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="template" type="template"/>

    <!-- Component props (translated to Vue props) -->
    <xs:element name="props">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="prop" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="name" use="required" />
                        <xs:attribute name="type" use="required" />
                        <xs:attribute name="required" type="xs:boolean" />
                        <xs:attribute name="default" />
                        <xs:attribute name="choices" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Computed component props (translated to Vue component props) -->
    <xs:element name="computed-props">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="computed-prop" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute name="name" use="required" />
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Local and global definitions (translated to SVG defs) -->
    <xs:element name="defs">
        <xs:complexType>
            <xs:group ref="svg-elements"></xs:group>
        </xs:complexType>
    </xs:element>

    <!-- Local and global styles (translated to CSS) -->
    <xs:element name="style">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="extends"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <!-- Various attributes -->
    <xs:attributeGroup name="general-attrs">
        <xs:attribute name="name" type="xs:string" />
        <xs:attribute ref="v-bind:name"/>
        <xs:attribute name="id" type="xs:string" />
        <xs:attribute ref="v-bind:id"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="origin-attrs">
        <xs:attribute name="x" type="xs:decimal"/>
        <xs:attribute ref="v-bind:x"/>
        <xs:attribute name="y" type="xs:decimal"/>
        <xs:attribute ref="v-bind:y"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="line-attrs">
        <xs:attribute name="x1" type="xs:decimal"/>
        <xs:attribute ref="v-bind:x1"/>
        <xs:attribute name="y1" type="xs:decimal"/>
        <xs:attribute ref="v-bind:y1"/>
        <xs:attribute name="x2" type="xs:decimal"/>
        <xs:attribute ref="v-bind:x2"/>
        <xs:attribute name="y2" type="xs:decimal"/>
        <xs:attribute ref="v-bind:y2"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="circle-attrs">
        <xs:attribute name="cx" type="xs:decimal"/>
        <xs:attribute ref="v-bind:cx"/>
        <xs:attribute name="cy" type="xs:decimal"/>
        <xs:attribute ref="v-bind:cy"/>
        <xs:attribute name="r" type="xs:decimal"/>
        <xs:attribute ref="v-bind:r"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="presentation-attrs">
        <xs:attribute name="stroke" type="xs:string" />
        <xs:attribute ref="v-bind:stroke"/>
        <xs:attribute ref="v-bind:stroke-width" />
        <xs:attribute name="stroke-width" />
        <xs:attribute name="stroke-opacity" type="xs:decimal" />
        <xs:attribute ref="v-bind:stroke-opacity" />
        <xs:attribute name="fill" type="xs:string"/>
        <xs:attribute ref="v-bind:fill" />
        <xs:attribute name="filter" type="xs:string"/>
        <xs:attribute ref="v-bind:filter" />
        <xs:attribute name="class" type="xs:string"/>
        <xs:attribute ref="v-bind:class" />
    </xs:attributeGroup>

    <xs:attributeGroup name="transform-attrs">
        <xs:attribute name="transform" />
        <xs:attribute ref="v-bind:transform"/>
        <xs:attribute name="transform-origin" />
        <xs:attribute ref="v-bind:transform-origin"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="dim-attrs">
        <xs:attribute name="width"  />
        <xs:attribute ref="v-bind:width"  />
        <xs:attribute name="height" />
        <xs:attribute ref="v-bind:height" />
    </xs:attributeGroup>

    <xs:attributeGroup name="point-attrs">
        <xs:attribute name="points"></xs:attribute>
        <xs:attribute ref="v-bind:points" />
    </xs:attributeGroup>

    <xs:attributeGroup name="text-attrs">
        <xs:attribute name="font-size" />
        <xs:attribute ref="v-bind:font-size" />
        <xs:attribute name="font-family" />
        <xs:attribute ref="v-bind:font-family" />
        <xs:attribute name="text-anchor" />
        <xs:attribute ref="v-bind:text-anchor" />
    </xs:attributeGroup>

    <xs:attributeGroup name="vue-directives">
        <xs:attribute name="v-for"/>
        <xs:attribute name="v-if"/>
        <xs:attribute name="v-else"/>
    </xs:attributeGroup>

    <xs:simpleType name="linkType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="logical"/>
            <xs:enumeration value="copper"/>
            <xs:enumeration value="fiber-optics"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>