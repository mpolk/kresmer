<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="xsd/kresmer-library.xsd"?>
<!-- **************************************************************************>
 *                            ðŸ‘‘ KresMer ðŸ‘‘
 *       "Kreslennya Merezh" - network diagram editor and viewer
 *      Copyright (C) 2022-2024 Dmitriy Stepanenko. All Rights Reserved.
 * ___________________________________________________________________________
 *                          Switches library
 *        This library contains generic switches and their parts.
<*************************************************************************** -->

<kresmer-library name="switches" xmlns:Kre="Kre" xmlns:v-bind="v-bind" xmlns:v-on="v-on" xmlns:v-slot="v-slot">
    <import library="stdlib" />

    <!-- Generic switch body, i.e. a single box or some stacked boxes without ports -->
    <component-class name="SwitchBody" category=".switch-parts">
        <extends base="RackMountDevice" v-bind:n-units="nStackUnits">
            <template v-slot:frontFacet="{}">
                <slot name="frontFacet" />
            </template>
            <template v-slot:topFacetC="{}">
                <polyline v-bind:points="$p($ThreeVectorTransform({u:[1,0], v:[0.2,1], w:[-0.4,0]})(...$$.crossArrows))" class="facet" />
                <slot name="topFacetC"/>
            </template>
            <template v-slot:topFacetLR="{}">
                <polyline v-bind:points="$p($$.crossArrows)" class="facet" />
                <slot name="topFacetLR"/>
            </template>
        </extends>
        <style>
            .facet { --facet-color: lightgray; }
        </style>
        <props except="n-units">
            <prop name="n-stack-units" type="Number" default="1" category="Hardware" description="The number of units (devices) in the stack"/>
            <prop name="ports-info" type="object" default="{}" category="Network" 
                description="Ports info for displaying in tooltips and similar"/>
            <prop name="fibers-info" type="Object" default="{}" category="Optics" description="Various optical parameters of the individual fibers"/>
        </props>
    </component-class>

    <!-- General switch (non-stacked) -->
    <component-class name="Switch" category="Switches">
        <extends base="SwitchBody" v-bind:unit-height="height" />
        <template>
            <Kre:Port v-for="i in nPorts"
                v-bind:x="height*(0.75*i - 0.5)" v-bind:y="height/4" v-bind:d="height/2"
                v-bind:name="i" v-bind:port-info="portsInfo[i]" v-bind:fiber-info="fibersInfo[i]"
                />
            <adjustment-ruler target-prop="height" 
                v-bind:x1="0" v-bind:y1="0" 
                v-bind:x2="0" v-bind:y2="height"
                fixed-end="1"
                />
        </template>
        <props except="unitHeight">
            <prop name="nPorts" type="Number" default="8" category="Hardware" />
            <prop name="height" type="Number" required="true" default="50" category="Geometry" />
            <prop name="width" type="Number" category="Geometry"/>
        </props>
        <computed-props>
            <computed-prop name="width">props.width ?? props.height * (0.25 + 0.75*props.nPorts)</computed-prop>
        </computed-props>
    </component-class>

    <!-- The trait for the switch that has a contigous range of combo-ports  -->
    <component-class name="SwitchWithComboPorts" category=".Switches">
        <props>
            <prop name="first-combo-media" type="string" choices="fiber,copper" category="Network" description="First combo port media type" />
            <prop name="second-combo-media" type="string" choices="fiber,copper" category="Network" description="Second combo port media type" />
            <prop name="third-combo-media" type="string" choices="fiber,copper" category="Network" description="Third combo port media type" />
            <prop name="fourth-combo-media" type="string" choices="fiber,copper" category="Network" description="Fourth combo port media type" />
        </props>
        <computed-props>
            <computed-prop name="firstComboPort">24</computed-prop>
            <computed-prop name="firstComboMedia">props.firstComboMedia ?? fn$.comboPortMedia(computedProps.firstComboPort)</computed-prop>
            <computed-prop name="secondComboMedia">props.secondComboMedia ?? fn$.comboPortMedia(computedProps.firstComboPort+1)</computed-prop>
            <computed-prop name="thirdComboMedia">props.thirdComboMedia ?? fn$.comboPortMedia(computedProps.firstComboPort+2)</computed-prop>
            <computed-prop name="fourthComboMedia">props.fourthComboMedia ?? fn$.comboPortMedia(computedProps.firstComboPort+3)</computed-prop>
        </computed-props>
        <functions>
            <function name="comboPortMedia" params="n">
                return props.portsInfo[n]?.media ?? "fiber";
            </function>
            <function name="comboPortData" params="n, physPortMedia, logPortMedia">
                return physPortMedia === logPortMedia ?
                    {
                        name: `${n}`,
                        "port-info": props.portsInfo[n],
                        "fiber-info": props.fibersInfo[n],
                        combo: physPortMedia,
                        "is-active": true,
                    }
                :
                    {
                        name: `${n}(${physPortMedia[0]})`,
                        "port-info": undefined,
                        "fiber-info": undefined,
                        combo: physPortMedia,
                        "is-active": false,
                    }
            </function>
        </functions>
    </component-class>
</kresmer-library>