<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="xsd/kresmer-library.xsd"?>
<!-- **************************************************************************>
 *                            ðŸ‘‘ KresMer ðŸ‘‘
 *       "Kreslennya Merezh" - network diagram editor and viewer
 *      Copyright (C) 2022-2023 Dmitriy Stepanenko. All Rights Reserved.
 * ___________________________________________________________________________
 *                        Patch-panels library
 *           This library contains graphics for patch-panels.
<*************************************************************************** -->
<kresmer-library xmlns:Kre="Kre" xmlns:v-bind="v-bind" xmlns:v-on="v-on" xmlns:v-slot="v-slot">

    <component-class name="FC-Port" category=".ports">
        <template>
            <Kre:Port v-bind:w="d" v-bind:h="d" v-bind:labelY="labelY" v-bind:name="name" v-bind:prefix="prefix" v-bind:font-size="fontSize" 
                    v-bind:port-info="portInfo">
                <polygon class="nut" v-bind:transform="`translate(${r}, ${r})`" 
                    v-bind:points="`0,${rNut}  ${rNut*cos60},${rNut/2}  ${rNut*cos60},${-rNut/2}
                                    0,${-rNut} ${-rNut*cos60},${-rNut/2} ${-rNut*cos60},${rNut/2}`" />
                <circle class="cap" v-bind:cx="r" v-bind:cy="r" v-bind:r="r*0.6"/>
            </Kre:Port>
        </template>
        <props extend="Port" except="w,h,keyPosition">
            <prop name="d" type="Number" required="true" default="25" category="Geometry" description="Port icon width and height"/>
            <prop name="font-size" type="Number" default="0.5" category="Presentation"/>
        </props>
        <computed-props>
            <computed-prop name="labelY">props.d*0.67</computed-prop>
            <computed-prop name="r">props.d*0.5</computed-prop>
            <computed-prop name="rNut">props.d*0.5</computed-prop>
            <computed-prop name="cos60">Math.sqrt(3)/2</computed-prop>
        </computed-props>
        <style extends="Port">
            .port-icon.body {fill: transparent; stroke: transparent;}
            .port-name {fill: white; font-weight: bold}
            .nut {fill: silver; stroke: white;}
            .cap {fill: #d00101; stroke: #bd0000; stroke-width: 2px}
        </style>
    </component-class>

    <component-class name="FC-APC-Port" category=".ports">
        <template>
            <Kre:FC-Port v-bind:d="d" v-bind:name="name" v-bind:prefix="prefix" v-bind:font-size="fontSize" v-bind:port-info="portInfo"/>
        </template>
        <props extend="FC-Port"/>
        <style extends="FC-Port">
            .cap {fill: #18b933; stroke: #199a2e;}
        </style>
    </component-class>

    <component-class name="SC-Port" category=".ports">
        <template>
            <Kre:Port v-bind:w="d" v-bind:h="d" v-bind:labelY="labelY" v-bind:name="name" v-bind:prefix="prefix" v-bind:font-size="fontSize" 
                    v-bind:port-info="portInfo">
                <Kre:Female-SC-Connector v-bind:cx="d/2" v-bind:cy="d/2" v-bind:w="d" v-bind:h="d" v-bind:key-position="keyPosition"/>
            </Kre:Port>
        </template>
        <props extend="Port" except="w,h">
            <prop name="d" type="Number" required="true" default="25" category="Geometry" description="Port icon width and height"/>
            <prop name="key-position" type="String" choices="top,bottom" default="top" category="Geometry" description="Key groove position"/>
        </props>
        <computed-props>
            <computed-prop name="labelY">props.keyPosition == 'top' ? props.d * 0.7 :  props.d * 0.8</computed-prop>
        </computed-props>
        <style>
            .Female-SC-Connector .border {fill: none; stroke: #057aff;}
        </style>
    </component-class>

    <component-class name="SC-APC-Port" category=".ports">
        <template>
            <Kre:SC-Port v-bind:d="d" v-bind:name="name" v-bind:prefix="prefix" v-bind:font-size="fontSize" v-bind:port-info="portInfo" />
        </template>
        <props extend="SC-Port"/>
        <style>
            .Female-SC-Connector .border {fill: none; stroke: #18b933;}
        </style>
    </component-class>

    <component-class name="patch-panel" category="Passive equipment">
        <template>
            <rect x="0" y="0" v-bind:width="w" v-bind:height="h" v-bind:fill="color" v-bind:stroke="strokeColor"/>
            <template v-for="i in nPorts/nPortRows">
                <component v-for="j in nPortRows" v-bind:is="portClass" 
                    v-bind:x="height * portSize * (padding + (1+interPortGap)*(orientation === 'horizontal' ? (i-1+(portLayout==='zigzag' ? 0.5 : 0)*(1-j%2)) : (j-1)))" 
                    v-bind:y="height * portSize * (padding + (1+interPortGap)*(orientation === 'horizontal' ? (j-1) : (i-1+(portLayout==='zigzag' ? 0.5 : 0)*(1-j%2))))" 
                    v-bind:d="portSize*height"
                    v-bind:name="(i-1)*nPortRows + j"
                    />
            </template>
        </template>
        <props>
            <prop name="height" type="Number" category="Geometry" description="Panel height - always perpendicular to the port row(s) regardless of orientaiton"/>
            <prop name="width" type="Number" category="Geometry" description="Panel width - always parallel to the port row(s) regardless of orientation"/>
            <prop name="orientation" type="String" choices="horizontal,vertical" required="true" default="horizontal" category="Geometry" description="Panel orientation: the direction ports are open to" />
            <prop name="nPorts" type="Number" required="true" default="12" category="Hardware" description="The number of ports (connectors)"/>
            <prop name="portType" type="String" choices="RJ45, FC, FC-APC, SC, SC-APC" default="FC" category="Hardware" description="The type of ports (connectors standard)"/>
            <prop name="nPortRows" type="Number" default="1" category="Geometry" description="The number of port rows"/>
            <prop name="portLayout" type="String" choices="in-line, zigzag" category="Geometry" />
            <prop name="labelsPosition" type="String" choices="above,below,before,after,both-sides,none" category="Presentation" description="Position of the port labels (if any)" />
            <prop name="color" type="String" default="#f0e8cb" category="Presentation"/>
            <prop name="strokeColor" type="String" default="#d3bc69" category="Presentation"/>
        </props>
        <computed-props>
            <computed-prop name="padding">0.4</computed-prop>
            <computed-prop name="interPortGap">0.2</computed-prop>
            <computed-prop name="portSize">1/(props.nPortRows + (props.nPortRows-1)*computedProps.interPortGap + 2*computedProps.padding)</computed-prop>
            <computed-prop name="height">props.height ?? 25 * (props.nPortRows + (props.nPortRows-1)*computedProps.interPortGap + 2*computedProps.padding)</computed-prop>
            <computed-prop name="width">
                props.width ?? computedProps.height * computedProps.portSize * 
                    (props.nPorts/props.nPortRows + (props.nPorts/props.nPortRows-1)*computedProps.interPortGap + 2*computedProps.padding 
                     + (computedProps.portLayout === 'zigzag' &amp;&amp; props.nPortRows > 1 ? 0.5 : 0))
            </computed-prop>
            <computed-prop name="w">props.orientation === "horizontal" ? computedProps.width : computedProps.height</computed-prop>
            <computed-prop name="h">props.orientation === "horizontal" ? computedProps.height : computedProps.width</computed-prop>
            <computed-prop name="portLayout">props.portLayout ?? props.portType === "FC" ? "zigzag" : "in-line"</computed-prop>
            <computed-prop name="portClass">`Kre:${props.portType}-Port`</computed-prop>
        </computed-props>
        <style>
            .port-icon.body {fill: #212121;}
        </style>
    </component-class>

</kresmer-library>