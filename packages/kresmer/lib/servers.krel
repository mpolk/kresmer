<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="xsd/kresmer-library.xsd"?>
<kresmer-library xmlns:Kre="Kre" xmlns:v-bind="v-bind" xmlns:v-on="v-on" xmlns:v-slot="v-slot">

    <!-- General switch -->
    <component-class name="ServerBody" category=".server-parts">
        <template>
            <title v-if="comment">{{comment}}</title>
            <rect x="0" y="0" v-bind:width="width" v-bind:height="height*nSlots" class="facet front"/>
            <slot name="frontFacet"/>
            <line v-for="i in nSlots-1" x1="0" v-bind:y1="i*height"
                v-bind:x2="width" v-bind:y2="i*height" class="slot-boundary" />
            <g v-if="perspective === 'center'" v-bind:transform="`scale(${width} ${-topFacetSize*height})`">
                <polyline
                    v-bind:points="$p($ThreeVectorTransform({u:[1,0], v:[0.2,1], w:[-0.4,0]})
                                                           ([0,0], [0,1], [1,1], [1,0]))"
                    class="top facet" />
                <ellipse cx="0.5" cy="0.48" rx="0.35" ry="0.45" class="facet" style="fill: none; stroke-width: 0.015" />
                <slot name="topFacetC"/>
            </g>
            <g v-if="perspective === 'right'"
                v-bind:transform="`skewX(${-topFacetSkew}) scale(${width} ${-topFacetSize*height})`">
                <polyline points="0,0 0,1 1,1 1,0" class="top facet" />
                <circle cx="0.5" cy="0.5" r="0.45" class="facet" style="fill: none; stroke-width: 0.015" />
                <slot name="topFacetLR"/>
            </g>
            <polygon
                v-if="perspective === 'right'"
                v-bind:points="`${width},0 ${width},${height*nSlots} 
                                ${width+topFacetSkewShift},${height*(nSlots - topFacetSize*1.2)} 
                                ${width+topFacetSkewShift},${-height*topFacetSize}`"
                class="side facet" />
            <g
                v-if="perspective === 'left'"
                v-bind:transform="`skewX(${topFacetSkew}) scale(${width} ${-topFacetSize*height})`">
                <polyline points="0,0 0,1 1,1 1,0" class="top facet" />
                <circle cx="0.5" cy="0.5" r="0.45" class="facet" style="fill: none; stroke-width: 0.015" />
                <slot name="topFacetLR"/>
            </g>
            <polygon
                v-if="perspective === 'left'"
                v-bind:points="`0,0 0,${height*nSlots} 
                                ${-topFacetSkewShift},${height*(nSlots - topFacetSize*1.2)} 
                                ${-topFacetSkewShift},${-height*topFacetSize}`"
                class="side facet" />
            <text
                v-bind:x="nameX" v-bind:y="nameY" v-bind:font-size="height*0.75"
                text-anchor="middle" class="device-name"
                v-bind:class='{"no-persp": perspective === "none"}'>{{name}}</text>
            <template v-if="ipAddress">
                <a v-if="managementProtocol" v-bind:href="managementProtocol + ipAddress" 
                   v-bind:target="managementRefTarget">
                    <text
                        v-bind:x="nameX" v-bind:y="nameY + height*0.25" v-bind:font-size="height*0.25"
                        text-anchor="middle" class="ip-address href"
                        v-bind:class='{"no-persp": perspective === "none"}'>
                        {{ipAddress}}
                    </text>
                </a>
                <text v-else=""
                    v-bind:x="nameX" v-bind:y="nameY + height*0.25" v-bind:font-size="height*0.25"
                    text-anchor="middle" class="ip-address"
                    v-bind:class='{"no-persp": perspective === "none"}'>
                    {{ipAddress}}
                </text>
            </template>
        </template>
        <style>
            .device-name { font-family: sans-serif; fill: black; text-shadow: none}
            .device-name.no-persp { font-family: sans-serif!important; fill: black!important; text-shadow: none!important}
            .ip-address { font-family: sans-serif; }
            a { text-decoration: none; }
            a:hover { text-decoration: underline; }
            .port-icon { fill: #404040; }
            .facet {
                --facet-color: lightgray;
                fill: var(--facet-color); stroke: var(--facet-color); stroke-width: 0;
            }
            .top.facet { filter: brightness(0.7); }
            .side.facet { filter: brightness(0.5); }
            .slot-boundary { stroke: black; stroke-opacity: 0.3; stroke-width: 2px; }
        </style>
        <props extend="ManagedDevice">
            <prop name="n-slots" type="Number" default="1" category="Hardware" description="The number of slots (devices) in the stack"/>
            <prop name="height" type="Number" required="true" default="50" category="Geometry" />
            <prop name="width" type="Number" required="true" default="312.5" category="Geometry" />
            <prop name="perspective" type="String" choices="left,right,center,none" default="center" category="Presentation" 
                  description="Visual perspective of the switch image"/>
            <prop name="top-facet-size" type="Number" default="1.4" category="Geometry" />
            <prop name="top-facet-skew" type="Number" default="60" category="Geometry" />
        </props>
        <computed-props>
            <computed-prop name="topFacetSkewShift">
                props.height * props.topFacetSize * Math.tan(props.topFacetSkew * Math.PI/180)
            </computed-prop>
            <computed-prop name="nameX">
                props.perspective === 'right' ? props.width/2 + computedProps.topFacetSkewShift*0.393 :
                props.perspective === 'left' ? props.width/2 - computedProps.topFacetSkewShift*0.393 :
                props.width*0.5
            </computed-prop>
            <computed-prop name="nameY">
                props.perspective === "none" ? -props.height*0.3 : -props.height*props.topFacetSize*0.393
            </computed-prop>
        </computed-props>
    </component-class>

    <component-class name="Server" category="Servers">
        <defs>
            <pattern id="kre:std:server-front-grid" viewBox="0 0 10 10" x="0" y="0" width="1%" height="10%" 
                     patternUnits="objectBoundingBox">
                <rect x="2" y="2" width="6" height="6" fill="#424242"/>
            </pattern>
        </defs>
        <template>
            <Kre:ServerBody 
                v-bind:name="name" v-bind:height="height" v-bind:width="width" 
                v-bind:top-facet-size="1" v-bind:perspective="perspective"
                v-bind:ip-address="ipAddress" v-bind:management-protocol="managementProtocol"
                v-bind:management-ref-target="managementRefTarget"
                v-bind:comment="comment"
                />
            <rect v-bind:x="height*0.08" v-bind:y="height*0.08" 
                    v-bind:height="height*0.84" v-bind:width="width-height*0.16" 
                    fill="url(#kre:std:server-front-grid)"/>
            <rect v-bind:x="height*0.08" v-bind:y="height*0.08" 
                  v-bind:height="height*0.25" v-bind:width="height*1.1" 
                  class="facet"/>
            <text v-bind:x="height*0.18" v-bind:y="height*0.25" v-bind:font-size="height*0.25" 
                  class="model-name">Juniper</text>
            <rect v-bind:x="height*8.1" v-bind:y="height*0.08" 
                  v-bind:height="height*0.25" v-bind:width="height" 
                  class="facet"/>
            <text v-bind:x="height*9" v-bind:y="height*0.25" text-anchor="end" v-bind:font-size="height*0.25" 
                  class="model-name">MX204</text>
            <rect v-bind:x="height*0.08" v-bind:y="height*0.45" 
                  v-bind:height="height*0.5" v-bind:width="height*4.1" 
                  class="facet"/>
            <Kre:XfpPort v-for="i in 4" v-bind:x="height*(i-0.8)" v-bind:y="height*0.53" v-bind:h="height/3" 
                         v-bind:name="`et0/0/${i-1}`" prefix="et0/"
                         v-bind:port-info="portsInfo[`et0/0/${i-1}`]"/>
            <rect v-bind:x="height*4.9" v-bind:y="height*0.08" 
                  v-bind:height="height*0.9" v-bind:width="height*2.1" 
                  class="facet"/>
            <template v-for="i in 4">
                <Kre:SfpPort v-bind:x="height*(i*0.5+4.5)" v-bind:y="height*0.15" v-bind:d="height/3" 
                             v-bind:name="`xe0/1/${i*2-2}`" prefix="xe0/" v-bind:font-size="0.7"
                             v-bind:port-info="portsInfo[`xe0/1/${i*2-2}`]"/>
                <Kre:SfpPort v-bind:x="height*(i*0.5+4.5)" v-bind:y="height*0.53" v-bind:d="height/3" 
                             v-bind:name="`xe0/1/${i*2-1}`" prefix="xe0/" v-bind:font-size="0.7" key-position="bottom"
                             v-bind:port-info="portsInfo[`xe0/1/${i*2-1}`]"/>
            </template>
            <rect v-bind:x="height*7.35" v-bind:y="height*0.45" 
                  v-bind:height="height*0.5" v-bind:width="height*0.5" 
                  class="facet"/>
            <template v-for="i in 2">
                <circle v-for="j in 2" v-bind:cx="height*(7.3+i*0.2)" v-bind:cy="height*(0.4+j*0.2)" 
                        v-bind:r="height*0.05" class="sync-port"/>
            </template>
        </template>
        <style extends="ServerBody">
            .device-name { fill: #ffffff; text-shadow: 3px 3px 3px black; }
            .ip-address { fill: #faffd6; text-shadow: 1px 1px 1px black;}
            .model-name { fill: #ffffff; font-family: sans-serif; }
            .facet {--facet-color: #b8b8b8;}
            .sync-port {fill: #8f6b00; stroke: #ffce1f; stroke-width: 2px;}
        </style>
        <props extend="ServerBody">
            <prop name="height" type="Number" required="true" default="75" category="Geometry"/>
            <prop name="width" type="Number" category="Geometry"/>
        </props>
        <computed-props>
            <computed-prop name="width">props.width || props.height * 9.1</computed-prop>
        </computed-props>
    </component-class>

</kresmer-library>